<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>HelloWorld</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>

    <repositories>
        <repository>
            <!-- snapshots are treated differently than other artifacts -->
            <!-- in repo snapshots / in dev versions have release numbers / timestamps appended to a filename -->
            <!-- when downloading a snapshot, the latest version is picked (timestamp discarded, renamed to snapshot  -->
            <id>spring-snapshot</id>
            <name>Spring Maven SNAPSHOT</name>
            <url>https://repo.spring.io/libs-snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.11</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.25.Final</version>
            <!-- this library brings relies on a conflicting transitive dep -->
            <!-- could exclude it here, and add transitive dependency in dependencies section -->
            <!-- bad idea, hard to exclude from every dependency, better option - use  maven-enforcer-plugin <dependencyManagement -->
            <!-- transitive dependency with fixed version would add a background noise in this section -->
            <!-- <exclusions>....</exclusions> -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <!-- picks the latest version from https://repo.spring.io/libs-snapshot/org/springframework/spring-core/5.3.3-SNAPSHOT/-->
            <version>5.3.3-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <!-- added by maven-enforcer-plugin-->
        <!-- helps dealing with transitive dependencies -->
        <!-- as far as I understand - classpath and MVN could use different jars when resolving conflicts !-->
        <!-- see surviving-dependency-hell-maven -->
        <!--
            comment this <dependencyManagement> section out,

            run 'mvn dependency:tree -Dverbose'
                [INFO] |  +- org.hibernate.common:hibernate-commons-annotations:jar:5.1.2.Final:compile
                [INFO] |  |  \- (org.jboss.logging:jboss-logging:jar:3.3.2.Final:compile - omitted for conflict with 3.4.1.Final)

            or more specific 'mvn dependency:tree -Dverbose -Dincludes=org.jboss.logging:jboss-logging'
            [INFO] - maven-dependency-plugin:2.8:tree (default-cli) @ HelloWorld -
            [INFO] com.example:HelloWorld:jar:1.0-SNAPSHOT
            [INFO] \- org.hibernate:hibernate-core:jar:5.4.25.Final:compile
            [INFO]    +- org.jboss.logging:jboss-logging:jar:3.4.1.Final:compile
            [INFO]    \- org.hibernate.common:hibernate-commons-annotations:jar:5.1.2.Final:compile
            [INFO]       \- (org.jboss.logging:jboss-logging:jar:3.3.2.Final:compile - omitted for conflict with 3.4.1.Final)
        -->
        <dependencies>
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>3.4.1.Final</version>
            </dependency>
        </dependencies>
        <!--
          only if code above is uncommented, there is a different result
          'mvn dependency:tree -Dverbose -Dincludes=org.jboss.logging:jboss-logging'
          com.example:HelloWorld:jar:1.0-SNAPSHOT
            [INFO] \- org.hibernate:hibernate-core:jar:5.4.25.Final:compile
            [INFO]    +- org.jboss.logging:jboss-logging:jar:3.4.1.Final:compile
            [INFO]    \- org.hibernate.common:hibernate-commons-annotations:jar:5.1.2.Final:compile
            [INFO]       \- (org.jboss.logging:jboss-logging:jar:3.4.1.Final:compile - version managed from 3.3.2.Final; omitted for duplicate)

          !!!!version managed from 3.3.2.Final!!!
        -->
    </dependencyManagement>

    <properties>
        <!-- plugin can be configured here, or in plugins/configure section -->
        <maven.compiler.target>15</maven.compiler.target>
        <maven.compiler.source>15</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>FOO</finalName> <!-- name used in target folder (FOO jar), not in repo (HelloWorld-1.0-SNAPSHOT.jar)-->
        <plugins>
            <plugin>
                <!-- using different version of th compiler plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <!-- FOO2 takes precedence over FOO (above)-->
                    <finalName>FOO2</finalName>
                    <!-- this would include only mainjava.xml -->
                    <!--<includes>-->
                        <!--<include>**/*.xml</include>-->
                    <!--</includes>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>generate sources</id>
                        <goals>
                            <!-- which goal to execute... source:jar... or source:test-jar to include test sources -->
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                        <!-- by default, this plugin is fired on package... postponing till install...-->
                        <!-- sources are not uploaded though!!! -->
                        <!-- is it a bug? How to generate and upload sources only on install -->
                        <!-- pre install is missing, validate is previous phase, sounds strange to use it -->
                        <phase>
                            install
                        </phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- this adds maven-javadoc-plugin-stale-data, what is that> -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>
                            install
                        </phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- in most cases use mvn:verify to launch goal associated with this plugin -->
                <!-- mvn enforcer:enforce does not work... why? -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <dependencyConvergence/> <!--there are different rules, i.e. use the latest -->
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
